stages:
  - build
  - test
  - deploy_infra
  - deploy_app

variables:
  DOCKER_IMAGE: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA
  AWS_DEFAULT_REGION: us-east-1

before_script:
  - apk add --no-cache python3 py3-pip
  - pip install awscli
  - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

# ==============================================================================
# Job: build_image
# ==============================================================================
build_image:
  stage: build
  script:
    - echo "Building Docker image..."
    - docker build -t $DOCKER_IMAGE ./comments-api
    - echo "Pushing image to ECR..."
    - docker push $DOCKER_IMAGE
  only:
    - main
    - develop
    - branches
  tags:
    - docker

# ==============================================================================
# Job: run_tests
# ==============================================================================
run_tests:
  stage: test
  script:
    - echo "Running unit tests..."
    - docker-compose -f docker-compose.yml run --rm web pytest comments-api/app/tests/
  needs:
    - build_image
  only:
    - main
    - develop
    - branches
  tags:
    - docker

# ==============================================================================
# Job: deploy_infra
# ==============================================================================
deploy_infra:
  stage: deploy_infra
  script:
    - echo "Applying Terraform configuration..."
    - cd terraform/develop
    - terraform init
    - terraform apply -auto-approve -var-file=../dev.tfvars
  when: manual
  only:
    - develop
  tags:
    - shell

# ==============================================================================
# Job: deploy_infra_prod
# ==============================================================================
deploy_infra_prod:
  stage: deploy_infra
  script:
    - echo "Applying Terraform configuration for Production..."
    - cd terraform/prod
    - terraform init
    - terraform apply -auto-approve -var-file=../prod.tfvars
  when: manual
  only:
    - main
  tags:
    - shell

# ==============================================================================
# Job: deploy_app_develop
# ==============================================================================
deploy_app_develop:
  stage: deploy_app
  script:
    - echo "Script de deploy para o ambiente de develop..."
    # Seu script de deploy para o ambiente de dev/staging aqui
  needs:
    - run_tests
  only:
    - develop
  tags:
    - shell

# ==============================================================================
# Job: deploy_app_prod
# ==============================================================================
deploy_app_prod:
  stage: deploy_app
  script:
    - echo "Script de deploy para o ambiente de produção..."
    # Seu script de deploy para o ambiente de produção aqui
  needs:
    - run_tests
  when: manual
  only:
    - main
  tags:
    - shell