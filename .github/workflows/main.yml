name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'

env:
  AWS_DEFAULT_REGION: us-east-1
  ECR_REPOSITORY: comments-api-dev
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Check for ECR repository existence
        id: check-ecr
        run: |
          aws ecr describe-repositories --repository-names ${{ env.ECR_REPOSITORY }} > /dev/null 2>&1
          if [ $? -ne 0 ]; then
            echo "::error::ECR repository '${{ env.ECR_REPOSITORY }}' not found. Aborting build."
            exit 1
          fi

      - name: Build Docker image
        run: docker build -t ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} ./comments-api

      - name: Push image to ECR
        run: |
          docker tag ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Run unit tests
        run: docker-compose -f docker-compose.yml run --rm web pytest

  deploy:
    runs-on: ubuntu-latest
    environment: develop
    needs: build_and_test
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name comments-api-dev --region ${{ env.AWS_DEFAULT_REGION }}

      - name: Get ECR registry URL
        id: get-registry
        run: |
          echo "registry=$(aws ecr describe-repositories --repository-names ${{ env.ECR_REPOSITORY }} --query 'repositories[0].repositoryUri' --output text)" >> $GITHUB_OUTPUT

      - name: Deploy to EKS
        run: |
          export IMAGE_URL=${{ steps.get-registry.outputs.registry }}:${{ env.IMAGE_TAG }}
          envsubst < manifests/dev/comments-api-deployment.yml | kubectl apply -f -